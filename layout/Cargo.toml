# Handles the layout as well as text layout, font decoding and 
# image layout / image decoding. 
# 
# Intermediary crate for if you need font and image loading,
# these cannot be in the core or css crates, because that would make 
# those crate unnecessarily heavy

[package]
name = "azul-layout"
version = "0.0.5"
authors = ["Felix Sch√ºtt <felix.schuett@maps4print.com>"]
license = "MPL-2.0"
description = "Layout solver + font and image loader the Azul GUI framework"
homepage = "https://azul.rs/"
keywords = ["gui", "user-interface", "svg", "graphics", "css" ]
categories = ["gui"]
repository = "https://github.com/maps4print/azul"
edition = "2021"
autoexamples = false

[dependencies]
azul-css                = { version = "0.0.5", path = "../css", default-features = false, features = ["parser"] }
azul-core               = { version = "0.0.5", path = "../core", default-features = false }
image                   = { version = "0.25", default-features = false }
rust-fontconfig         = { version = "1.0.3", features = ["parsing", "std"], default-features = false }

tinyvec                 = { version = "1.9.0", default-features = false, optional = true  }
lyon                    = { version = "1.0.1",  default-features = false, optional = true }
usvg                    = { version = "0.45.0",   default-features = false, optional = true }
resvg                   = { version = "0.45.0",   default-features = false, optional = true }
tiny-skia               = { version = "0.11.4",    default-features = false, optional = true, features = ["std", "simd", "png-format"] }
geo-booleanop           = { version = "0.3.2", default-features = false, optional = true }
geo                     = { version = "0.31.0", default-features = false, optional = true }
roxmltree               = { version = "0.21.1",   default-features = false, optional = true }
xmlwriter               = { version = "0.1.0",    default-features = false, optional = true }
xmlparser               = { version = "0.13.6",   default-features = false, optional = true }
gl-context-loader       = { version = "0.1.8", default-features = false, optional = true }

# text3 features
unicode-bidi            = { version = "0.3.18", default-features = false, optional = true, features = ["hardcoded-data"]}
thiserror = { version = "2.0.17", default-features = false }
hyphenation             = { version = "0.8.4", default-features = false, features = ["embed_all"], optional = true }
unicode-segmentation    = { version = "1.12.0", default-features = false, optional = true }
unicode-normalization   = { version = "0.1.24",  default-features = false, optional = true }
allsorts = { git = "https://github.com/fschutt/allsorts", rev = "1ddc1c1",  default-features = false, features = ["flate2_rust"], optional = true  }
lru = { version = "0.16.1", default-features = false }
taffy = { version = "0.9.1", default-features = false, features = ["std", "flexbox", "grid", "alloc", "taffy_tree", "block_layout", "calc", "content_size", "detailed_layout_info"] }

[features]
default = ["std", "text_layout", "font_loading", "svg", "xml", "cpurender"]
std = ["azul-core/std"]
cpurender = ["tiny-skia", "allsorts"]
text_layout = ["unicode-normalization", "allsorts", "tinyvec", "unicode-segmentation", "unicode-bidi", "hyphenation"]
pdf = ["text_layout"]
gif = ["image/gif"]
jpeg = ["image/jpeg"]
png = ["image/png"]
tiff = ["image/tiff"]
bmp = ["image/bmp"]
ico = ["image/ico"]
tga = ["image/tga"]
hdr = ["image/hdr"]
webp = ["image/webp"]
pnm = ["image/pnm"]
font_loading = []
xml = ["roxmltree", "xmlwriter", "xmlparser"]
svg = ["lyon", "tiny-skia", "usvg", "resvg", "xml", "geo-booleanop", "geo", "gl-context-loader"]

[[example]]
name = "pdf_export"
required-features = ["pdf"]
